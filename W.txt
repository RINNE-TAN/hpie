cW :: Π(S:U) (S -> U) -> U.
cW = λ(S) λ(P) 
    Π(W:U) (Π(s:S) (P s -> W) -> W) -> W.

cSup :: Π(S:U) Π(P:S -> U) Π(s:S) (P s -> cW S P) -> cW S P.
cSup = λ(S) λ(P) λ(s) λ(f)
            λ(W) λ(sup)
                sup s (λ(ps) f ps W sup)
.

cWInd :: Π(S:U) Π(P:S -> U) cW S P -> U.
cWInd = λ(S) λ(P) λ(w) Π(C:cW S P -> U) 
            (
                Π(s:S) Π(f:P s -> cW S P) 
                    (Π(p:P s) C (f p)) -> C(cSup S P s f)
            ) -> C w
.

W :: Π(S:U) (S -> U) -> U.
W = λ(S) λ(P) Σ(w:cW S P) cWInd S P w.

Sup :: Π(S:U) Π(P:S -> U) Π(s:S) (P s -> W S P) -> W S P.
Sup = λ(S) λ(P) λ(s) λ(f)
        (
            cSup S P s (λ(ps) First (f ps)),
            λ(C) λ(psup) 
                psup s (λ(ps) First (f ps)) (
                    λ(ps)
                        (Second (f ps)) C psup
                )
        )
.
PN :: Bool -> U.
PN = λ(b) IndBool b (λ(b) U) Absurd Trivial.

N :: U.
N = W Bool PN.

Z :: N.
Z = Sup Bool PN
    False (λ(absurd) IndAbsurd absurd N).

S :: N -> N.
S = λ(n) Sup Bool PN
    True (λ(trivial) n).

plusMot :: cW Bool PN -> U.
plusMot = λ(n) N.

plus :: N -> N -> N.
plus = λ(left) λ(right)
        (Second left) plusMot (
            λ(s) λ(f) IndBool s (λ(s) (PN s -> N) -> N)
                (λ(child) right)
                (λ(child) S(child Sole))
        )
.
plus (S Z) (S Z) === S (S Z) : N.